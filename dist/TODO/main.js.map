{"version":3,"sources":["./src/app/views/modules/modules.component.html","./src/app/views/modules/modules.component.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/views/applications/applications.component.html","./src/app/views/applications/applications.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/service/data-handler.service.ts","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/data/TestData.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div class=\"grid-container\">\n  <h1 class=\"mat-h1\">Welcome</h1>\n  <mat-grid-list cols=\"4\" rowHeight=\"200px\">\n    <mat-grid-tile *ngFor=\"let module of modules \" [colspan]=\"1\" [rowspan]=\"1\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <div mat-card-avatar>\n            <mat-icon class=\"dashboard-icon\" color=\"primary\">{{module.icon}}</mat-icon>\n          </div>\n          <mat-card-title>\n            {{module.title}}\n          </mat-card-title>\n          <mat-card-subtitle>\n            {{module.subtitle}}\n          </mat-card-subtitle>\n        </mat-card-header>\n        <mat-card-actions class=\"module-actions\">\n          <button color=\"primary\" mat-icon-button>\n            <mat-icon>shopping_cart</mat-icon>\n          </button>\n          <button color=\"primary\" mat-icon-button>\n            <mat-icon>account_tree</mat-icon>\n          </button>\n          <button color=\"primary\" mat-icon-button>\n            <mat-icon>poll</mat-icon>\n          </button>\n          <span class=\"spacer\"></span>\n          <button color=\"primary\" mat-stroked-button>\n            <mat-icon>add_shopping_cart</mat-icon>\n            {{module.orderButton}}\n          </button>\n        </mat-card-actions>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {DataHandlerService} from '../../service/data-handler.service';\nimport {Module} from '../../model/module';\n\n@Component({\n  selector: 'app-modules',\n  templateUrl: './modules.component.html',\n  styleUrls: ['./modules.component.css']\n})\nexport class ModulesComponent implements OnInit {\n\n  modules: Module[];\n\n  constructor(private dataHandler: DataHandlerService) {\n  }\n\n  // tslint:disable-next-line:typedef\n  ngOnInit() {\n    this.modules = this.dataHandler.getModules();\n  }\n\n}\n","import {Component} from '@angular/core';\nimport {map} from 'rxjs/operators';\nimport {Breakpoints, BreakpointObserver} from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n  /** Based on the screen size, switch from standard to one column per row */\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({matches}) => {\n      if (matches) {\n        return [\n          {title: 'Card 1', cols: 1, rows: 1},\n          {title: 'Card 2', cols: 1, rows: 1},\n          {title: 'Card 3', cols: 1, rows: 1},\n          {title: 'Card 4', cols: 1, rows: 1}\n        ];\n      }\n\n      return [\n        {title: 'Card 1', cols: 2, rows: 1},\n        {title: 'Card 2', cols: 1, rows: 1},\n        {title: 'Card 3', cols: 1, rows: 2},\n        {title: 'Card 4', cols: 1, rows: 1}\n      ];\n    })\n  );\n\n  constructor(private breakpointObserver: BreakpointObserver) {\n  }\n}\n","<app-modules></app-modules>\n<!--<div class=\"grid-container\">-->\n<!--  <h1 class=\"mat-h1\">Dashboard</h1>-->\n<!--  <mat-grid-list cols=\"2\" rowHeight=\"350px\">-->\n<!--    <mat-grid-tile *ngFor=\"let card of cards | async\" [colspan]=\"card.cols\" [rowspan]=\"card.rows\">-->\n<!--      <mat-card class=\"dashboard-card\">-->\n<!--        <mat-card-header>-->\n<!--          <mat-card-title>-->\n<!--            {{card.title}}-->\n<!--            <button mat-icon-button class=\"more-button\" [matMenuTriggerFor]=\"menu\" aria-label=\"Toggle menu\">-->\n<!--              <mat-icon>more_vert</mat-icon>-->\n<!--            </button>-->\n<!--            <mat-menu #menu=\"matMenu\" xPosition=\"before\">-->\n<!--              <button mat-menu-item>Expand</button>-->\n<!--              <button mat-menu-item>Remove</button>-->\n<!--            </mat-menu>-->\n<!--          </mat-card-title>-->\n<!--        </mat-card-header>-->\n<!--        <mat-card-content class=\"dashboard-card-content\">-->\n<!--          <div>Card Content Here</div>-->\n<!--        </mat-card-content>-->\n<!--      </mat-card>-->\n<!--    </mat-grid-tile>-->\n<!--  </mat-grid-list>-->\n<!--</div>-->\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<mat-nav-list>\n  <a *ngFor=\"let application of applications\" mat-list-item>\n    <mat-icon color=\"primary\" matListIcon>view_in_ar</mat-icon>\n    <h3 mat-line>{{application.name}} </h3>\n    <mat-divider *ngIf=\"!last\" [inset]=\"true\"></mat-divider>\n  </a>\n  <!--  <mat-divider></mat-divider>-->\n</mat-nav-list>\n","import {Component, OnInit} from '@angular/core';\nimport {Application} from '../../model/application';\nimport {DataHandlerService} from '../../service/data-handler.service';\n\n@Component({\n  selector: 'app-applications',\n  templateUrl: './applications.component.html',\n  styleUrls: ['./applications.component.css']\n})\nexport class ApplicationsComponent implements OnInit {\n\n  applications: Application[];\n\n  constructor(private dataHandler: DataHandlerService) {\n  }\n\n  ngOnInit(): void {\n    this.applications = this.dataHandler.getApps();\n  }\n\n}\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'TODO';\n}\n","<app-nav></app-nav>\n\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {ModulesComponent} from './views/modules/modules.component';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatCardModule} from '@angular/material/card';\nimport {NavComponent} from './nav/nav.component';\nimport {LayoutModule} from '@angular/cdk/layout';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatListModule} from '@angular/material/list';\nimport {RouterModule} from '@angular/router';\nimport {HomeComponent} from './home/home.component';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {AppRoutingModule} from './app-routing.module';\nimport {ApplicationsComponent} from './views/applications/applications.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ModulesComponent,\n    NavComponent,\n    HomeComponent,\n    ApplicationsComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    LayoutModule,\n    MatSidenavModule,\n    MatListModule,\n    RouterModule,\n    MatGridListModule,\n    MatMenuModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Injectable} from '@angular/core';\nimport {Module} from '../model/module';\nimport {TestData} from '../data/TestData';\nimport {Application} from '../model/application';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataHandlerService {\n\n  constructor() {\n  }\n\n  getModules(): Module[] {\n    return TestData.modules;\n  }\n\n  getApps(): Application[] {\n    return TestData.applications;\n  }\n}\n","import {Component} from '@angular/core';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport {Observable} from 'rxjs';\nimport {map, shareReplay} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {\n  }\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n               [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n               [opened]=\"(isHandset$ | async) === false\"\n               class=\"sidenav\"\n               fixedInViewport>\n    <mat-toolbar>COP</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item routerLink=\"/home\">\n        <mat-icon color=\"primary\" matListIcon>home</mat-icon>\n        <h3 mat-line>Home</h3>\n      </a>\n      <a mat-list-item routerLink=\"/applications\">\n        <mat-icon color=\"primary\" matListIcon>view_in_ar</mat-icon>\n        <h3 mat-line>My Applications</h3>\n      </a>\n      <a href=\"#\" mat-list-item>\n        <mat-icon color=\"primary\" matListIcon>build</mat-icon>\n        <h3 mat-line>Administration</h3>\n      </a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        type=\"button\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span>TODO</span>\n    </mat-toolbar>\n\n    <router-outlet></router-outlet>\n\n\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import {Module} from '../model/module';\r\nimport {Right} from '../model/right';\r\nimport {User} from '../model/User';\r\nimport {Application} from '../model/application';\r\n\r\nexport class TestData {\r\n\r\n  static modules: Module[] = [\r\n    {id: 1, title: 'Firewall', subtitle: 'Firewall Rulesets', icon: 'local_fire_department', orderButton: 'Ruleset'},\r\n    {id: 2, title: 'Loadbalancer', subtitle: 'loadbalancing', icon: 'storage', orderButton: 'VIP'},\r\n    {id: 3, title: 'Storage and Backup', subtitle: 'Some shares', icon: 'dns', orderButton: 'Share'},\r\n    {id: 4, title: 'Idaas', subtitle: 'Identity as a service', icon: 'supervisor_account', orderButton: 'Something'}\r\n  ];\r\n\r\n  static applications: Application[] = [\r\n    {id: 1, name: 'Dummy'},\r\n    {id: 2, name: 'Some other app'}\r\n  ];\r\n\r\n  static rights: Right[] = [\r\n    {id: 1, rightName: 'admin', rightDescription: 'Can do everything'},\r\n    {id: 2, rightName: 'viewer', rightDescription: 'Can observe'}\r\n  ];\r\n\r\n  static users: User[] = [\r\n    {\r\n      id: 1,\r\n      userName: 'root',\r\n      firstName: 'Ilya',\r\n      lastName: 'Belov',\r\n      right: TestData.rights[1]\r\n    },\r\n    {\r\n      id: 2,\r\n      userName: 'bob',\r\n      firstName: 'bob',\r\n      lastName: 'bob',\r\n      right: TestData.rights[2]\r\n    }\r\n  ];\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {HomeComponent} from './home/home.component';\nimport {ApplicationsComponent} from './views/applications/applications.component';\n\nconst routes: Routes = [\n  {path: 'home', component: HomeComponent},\n  {path: 'applications', component: ApplicationsComponent},\n];\n\n// @ts-ignore\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}